// Generated by CoffeeScript 1.6.2
var LMI, Mortgage, MortgageFormView, MortgageSummaryView, Period, f, m, v, _ref, _ref1, _ref2,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

LMI = {
  lookup: function(lvr, loan) {
    var b1, b2, b3, band, index;

    b1 = [0.41, 0.61, 0.76, 0.91, 1.22, 1.68, 1.89, 2.10];
    b2 = [0.52, 0.78, 0.99, 1.18, 1.60, 2.20, 2.47, 2.74];
    b3 = [0.72, 1.01, 1.25, 1.50, 2.02, 3.31, 3.56, 3.76];
    if (loan <= 300000) {
      band = b1;
    } else if (loan <= 600000) {
      band = b2;
    } else if (loan <= 1000000) {
      band = b3;
    }
    if (lvr > 0.8 && lvr < 0.82) {
      index = 0;
    } else if (lvr < 0.84) {
      index = 1;
    } else if (lvr < 0.86) {
      index = 2;
    } else if (lvr < 0.88) {
      index = 3;
    } else if (lvr < 0.9) {
      index = 4;
    } else if (lvr < 0.92) {
      index = 5;
    } else if (lvr < 0.94) {
      index = 6;
    } else {
      index = 7;
    }
    return band[index] / 100;
  }
};

Period = {
  Monthly: 12,
  Fortnightly: 24,
  Weekly: 48
};

Mortgage = (function(_super) {
  __extends(Mortgage, _super);

  function Mortgage() {
    _ref = Mortgage.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  Mortgage.prototype.defaults = {
    interest: 5.74,
    price: 700000,
    deposit: 150459,
    duration: 30
  };

  Mortgage.prototype.stamp_duty = function() {
    return 26990;
  };

  Mortgage.prototype.loan = function() {
    return this.price - this.deposit;
  };

  Mortgage.prototype.borrowing = function() {
    return this.loan() + this.lmi() + this.fees() + this.stamp_duty();
  };

  Mortgage.prototype.fees = function() {
    return 2469;
  };

  Mortgage.prototype.lvr = function() {
    return this.loan() / this.price;
  };

  Mortgage.prototype.lmi = function() {
    return LMI.lookup(this.lvr(), this.loan()) * this.loan();
  };

  Mortgage.prototype.repayments = function() {
    var P, i, n;

    P = this.borrowing();
    i = this.interest / Period.Monthly / 100;
    n = this.duration * Period.Monthly;
    return P * (i * Math.pow(i + 1, n)) / (Math.pow(1 + i, n) - 1);
  };

  Mortgage.prototype.toJSON = function() {
    return _.extend(_.clone(this.attributes), {
      fees: this.fees(),
      loan: this.loan(),
      borrowing: this.borrowing(),
      lvr: this.lvr() * 100,
      repayments: this.repayments(),
      lmi: this.lmi(),
      stamp_duty: this.stamp_duty()
    });
  };

  Mortgage.prototype.toFormattedJSON = function() {
    var decimals, json, key, monies, value;

    monies = ['price', 'deposit', 'stamp_duty', 'fees', 'loan', 'borrowing', 'repayments', 'lmi'];
    decimals = ['lvr', 'interest'];
    json = this.toJSON();
    for (key in json) {
      value = json[key];
      if (__indexOf.call(monies, key) >= 0) {
        json[key] = accounting.formatMoney(value);
      }
      if (__indexOf.call(decimals, key) >= 0) {
        json[key] = accounting.formatNumber(value);
      }
    }
    return json;
  };

  Mortgage.prototype.update = function() {};

  Mortgage.prototype.toString = function() {
    return JSON.stringify(this.toJSON());
  };

  return Mortgage;

})(Backbone.Model);

MortgageFormView = (function(_super) {
  __extends(MortgageFormView, _super);

  function MortgageFormView() {
    _ref1 = MortgageFormView.__super__.constructor.apply(this, arguments);
    return _ref1;
  }

  MortgageFormView.prototype.el = '#form';

  MortgageFormView.prototype.template = _.template($('#__MortgageForm').html());

  MortgageFormView.prototype.events = {
    'touchstart [type=number]': 'registerTouch',
    'touchmove  [type=number]': 'changeProperty',
    'touchend   [type=number]': 'deregisterTouch'
  };

  MortgageFormView.prototype.initialize = function() {
    return this.binder = new Backbone.ModelBinder;
  };

  MortgageFormView.prototype.render = function() {
    this.$el.html(this.template(this.model.toJSON()));
    this.binder.bind(this.model, this.el);
    return this;
  };

  MortgageFormView.prototype.registerTouch = function(event) {
    var touch;

    touch = event.originalEvent.touches[0];
    return this.touch = {
      x: touch.pageX,
      y: touch.pageY
    };
  };

  MortgageFormView.prototype.changeProperty = function(event) {
    var $target, property, step, touch, value;

    event.preventDefault();
    touch = event.originalEvent.touches[0];
    $target = $(event.target);
    property = $target.attr('name');
    step = $target.data('step');
    value = this.model.get(property);
    if (touch.pageY - this.touch.y < 0) {
      value += step;
    } else {
      value -= step;
    }
    return this.model.set(property, value);
  };

  MortgageFormView.prototype.deregisterTouch = function(event) {
    return this.touch = null;
  };

  return MortgageFormView;

})(Backbone.View);

MortgageSummaryView = (function(_super) {
  __extends(MortgageSummaryView, _super);

  function MortgageSummaryView() {
    _ref2 = MortgageSummaryView.__super__.constructor.apply(this, arguments);
    return _ref2;
  }

  MortgageSummaryView.prototype.el = '#summary';

  MortgageSummaryView.prototype.template = _.template($('#__MortgageSummary').html());

  MortgageSummaryView.prototype.initialize = function() {
    return this.listenTo(this.model, "change", this.render);
  };

  MortgageSummaryView.prototype.render = function() {
    this.$el.html(this.template(this.model.toFormattedJSON()));
    return this;
  };

  return MortgageSummaryView;

})(Backbone.View);

m = new Mortgage;

f = new MortgageFormView({
  model: m
});

v = new MortgageSummaryView({
  model: m
});

f.render();

v.render();
